import edu.duke.*;
import java.io.*;
/**
 * Write a description of WordLengths here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class WordLengths {
    public void countWordLengths(FileResource resource, int[] counts){
    //read words from resource
    String longest = "";
    String[] words = {};
    for (String s : resource.words()){
        //make sure the string is letters
        int charCount = s.length();
        if(Character.isLetter(s.charAt(charCount-1)) == false){
            charCount -= 1;
        }
        if(Character.isLetter(s.charAt(0)) == false){
        charCount -= 1;
        }
        counts[charCount] ++;
        if (charCount >= longest.length()){
            longest = s;
        }
    }
    for (int i = 0; i < counts.length; i++) {
    System.out.println(counts[i] + " words of length " + i);
    }
    System.out.println("Longest word is " + longest);
    //count number of words of each length for all words in resource
    //store the counts in array counts
    //don't count non-letter values (Character.isLetter)
    //if a word is >= the largest array, it counts as the largest
    }
    public void testCountWordLengths(){
    FileResource test = new FileResource("smallHamlet.txt");
    int[] counts = new int[31];
    countWordLengths(test, counts);
    int maxLength = indexOfMax(counts);
    System.out.println("Most common word length is " + maxLength);
    }
    public int indexOfMax(int[] values){
    //index position of largest element in values
    int commonLength = 0;
    for (int i = 0; i < values.length; i++){
        if (commonLength < values[i]){
            commonLength = i;
        }
    }
    return commonLength;
    }
    }
